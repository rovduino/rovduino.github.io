{"name":"ROVduino","tagline":"OSI ROV Control","body":"ROVduino is an open source, rock solid robotics control system. ROVduino is designed for underwater robots, but is easily customized for any situation where a 100% fault tolerant system is required. \r\n\r\n\r\nROVduino uses an iPad with a custom hardware control interface to control a wirelessly attached robot via UDP communications protocol. Video streams from IP Camera are used to send a video feed back to the robot operator. The entire system is designed to be easily portable, and quick to setup and takedown.\r\n## Features\r\n\r\n* UDP Communications for rock solid, minimal setup communications\r\n* Seperate GUI, communications, and processing threads to eliminate slowdowns\r\n* Natively written, hand optimized code is extensively tested on device to ensure optimal execution\r\n* Universal application works with iPad, and iPhone\r\n* Custom ROVduino hardware control interface connects directly to device. No external computers required for ROV control.\r\n* wireless communications allows for device to be easily setup, and not remain tethered to base station.\r\n\r\n##Code Units\r\n\r\n* (<a href=\"https://github.com/rovduino/Administration-and-Documentation\">Administration and Documentation</a>)\r\n* (<a href=\"https://github.com/rovduino/Utilities\">Utilities</a>)\r\n* (<a href=\"https://github.com/rovduino/Control-Interface\">Control Interface</a>)\r\n* (<a href=\"https://github.com/rovduino/ROV-Firmware\">Firmware</a>)\r\n\r\n##Authors and Contributors\r\n\r\n\r\n* Gregory Marchese (<a href=\"https://github.com/gregorymarchese\">@gregorymarchese</a>)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}